# Make.win - makefile for compiling SUMP Pump with Visual Studio Tools.
#
# $Revision$
# 
# To use this makefile, open a Visual Studio command prompt with the desiged
# environment (x86 or x64) and use the following:
#     nmake -f Make.win [target]
# Yes, it would be preferable to do all this in a Visual Studio project.
#
# NOTA BENE: Due to the dependence on the 32-bit zlib library for the spgzip,
#            gensort and valsort programs, the performance programs cannot
#            currently be built for 64-bit systems.
#
# In order to test, you currently need to use a cygwin environment. In a
# cygwin shell, to generate the test files use:
#     make testfiles
# Then test with the python script runregtests.py.  UNFORTUNATELY PYTHON
# on Windows seems to periodically return bogus return values of 127 for
# external programs (including "cmp"), so the regression and performance
# tests don't run reliably.
#
CFLAGS=/nologo /Zi /MTd
LIBS=   # was kernel32.lib

EXPORTS= /export:sp_get_version \
         /export:sp_get_id \
         /export:sp_start \
         /export:sp_argv_to_str \
         /export:sp_start_sort \
         /export:sp_get_sort_stats \
         /export:sp_get_nsort_version \
         /export:sp_link \
         /export:sp_write_input \
         /export:sp_get_in_buf \
         /export:sp_put_in_buf_bytes \
         /export:sp_read_output \
         /export:sp_get_error \
         /export:sp_wait \
         /export:sp_open_file_src \
         /export:sp_open_file_dst \
         /export:sp_file_wait \
         /export:sp_get_error_string \
         /export:sp_free \
         /export:sp_file_free \
         /export:pfunc_get_rec \
         /export:pfunc_get_in_buf \
         /export:pfunc_get_out_buf \
         /export:pfunc_put_out_buf_bytes \
         /export:pfunc_get_thread_index \
         /export:pfunc_get_task_number \
         /export:pfunc_write \
         /export:pfunc_printf \
         /export:pfunc_error \
         /export:pfunc_mutex_lock \
         /export:pfunc_mutex_unlock 

all: sump.exe libsump.dll regtestprogs perftestprogs

regtestprogs: sump.exe sumpversion.exe reduce.exe reducefixed.exe upper.exe upperfixed.exe upperwhole.exe oneshot.exe

perftestprogs: sumpversion.exe billing.exe spgzip.exe lookup.exe gensort.exe valsort.exe map.exe red.exe

sump.exe: sump.obj main.c
	cl $(CFLAGS) sump.obj main.c $(LIBS)

sump.obj: sump.c sump.h sump_win.c sump_win.h sumpversion.h
	cl -c $(CFLAGS) sump.c

libsump.dll: sump.obj
	link /nologo /dll $(EXPORTS) sump.obj /out:libsump.dll

reduce.exe: reduce.c libsump.dll
	cl $(CFLAGS) reduce.c libsump.lib $(LIBS)

reducefixed.exe: reducefixed.c libsump.dll
	cl $(CFLAGS) reducefixed.c libsump.lib $(LIBS)

upper.exe: upper.c libsump.dll
	cl $(CFLAGS) upper.c libsump.lib $(LIBS)

upperfixed.exe: upperfixed.c libsump.dll
	cl $(CFLAGS) upperfixed.c libsump.lib $(LIBS)

upperwhole.exe: upperwhole.c libsump.dll
	cl $(CFLAGS) upperwhole.c libsump.lib $(LIBS)

oneshot.exe: oneshot.c libsump.dll
	cl $(CFLAGS) oneshot.c libsump.lib $(LIBS)

billing.exe: billing.c libsump.dll
	cl $(CFLAGS) billing.c libsump.lib $(LIBS)

spgzip.exe: spgzip.c libsump.dll
	cl $(CFLAGS) /Izlib\include spgzip.c libsump.lib zdll.lib $(LIBS)

lookup.exe: lookup.c libsump.dll
	cl $(CFLAGS) /Izlib\include lookup.c libsump.lib zdll.lib $(LIBS)

gensort.exe: gensort.c libsump.dll rand16.obj
	cl $(CFLAGS) /Izlib\include gensort.c rand16.obj libsump.lib zdll.lib $(LIBS)

valsort.exe: valsort.c libsump.dll rand16.obj
	cl $(CFLAGS) /Izlib\include valsort.c rand16.obj libsump.lib zdll.lib $(LIBS)

map.exe: map.c libsump.dll
	cl $(CFLAGS) map.c libsump.lib $(LIBS)

red.exe: red.c libsump.dll
	cl $(CFLAGS) red.c libsump.lib $(LIBS)

sumpversion.exe: sumpversion.c libsump.dll
	cl $(CFLAGS) sumpversion.c libsump.lib $(LIBS)

rand16.obj: rand16.c rand16.h
	cl -c $(CFLAGS) rand16.c
